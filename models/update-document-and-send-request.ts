/*
Resources and endpoints

When I started SignWell in 2019, I saw there was a need for an alternative to the hard-to-use and expensive e-signature software already out there. Documents can be complicated enough, but getting a document signed shouldn't be complicated too.

At SignWell, we pride ourselves not only on the ease and affordability of our e-signature process but also on our personalized and industry-leading customer support â€” whether it's for individual use or larger team accounts, SignWell is here to help you feel comfortable and confident getting your documents signed.

The SignWell mission? Simplify how documents get signed for millions of people and businesses. We're excited to help you continue to move toward the future of paperless document signing.

Ruben Gamez
Founder, SignWell

The version of the OpenAPI document: 1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"


/**
 * 
 * @export
 * @interface UpdateDocumentAndSendRequest
 */
export interface UpdateDocumentAndSendRequest {
    /**
     * Set to `true` to enable Test Mode. Documents created with Test Mode do not count towards API billing and are not legally binding. Defaults to `false`
     * @type {boolean}
     * @memberof UpdateDocumentAndSendRequest
     */
    'test_mode'?: boolean;
    /**
     * The name of the document.
     * @type {string}
     * @memberof UpdateDocumentAndSendRequest
     */
    'name'?: string;
    /**
     * Email subject for the signature request that recipients will see. Defaults to the default system subject or a template subject (if the document is created from a template).
     * @type {string}
     * @memberof UpdateDocumentAndSendRequest
     */
    'subject'?: string;
    /**
     * Email message for the signature request that recipients will see. Defaults to the default system message or a template message (if the document is created from a template).
     * @type {string}
     * @memberof UpdateDocumentAndSendRequest
     */
    'message'?: string;
    /**
     * Number of days before the signature request expires. Defaults to the account expiration setting or template expiration (if the document is created from a template).
     * @type {number}
     * @memberof UpdateDocumentAndSendRequest
     */
    'expires_in'?: number;
    /**
     * Whether to send signing reminders to recipients. Reminders are sent on day 3, day 6, and day 10 if set to `true`. Defaults to `true`.
     * @type {boolean}
     * @memberof UpdateDocumentAndSendRequest
     */
    'reminders'?: boolean;
    /**
     * When set to `true` recipients will sign one at a time in the order of the `recipients` collection of this request.
     * @type {boolean}
     * @memberof UpdateDocumentAndSendRequest
     */
    'apply_signing_order'?: boolean;
    /**
     * Unique identifier for API Application settings to use. API Applications are optional and mainly used when isolating OAuth apps or for more control over embedded API settings
     * @type {string}
     * @memberof UpdateDocumentAndSendRequest
     */
    'api_application_id'?: string;
    /**
     * When set to `true` it enables embedded signing in your website/web application. Embedded functionality works with an iFrame and email authentication is disabled. :embedded_signinig defaults to `false`.
     * @type {boolean}
     * @memberof UpdateDocumentAndSendRequest
     */
    'embedded_signing'?: boolean;
    /**
     * On embedding signing, document owners (and CC\'d contacts) do not get a notification email when documents have been completed. Setting this param to `true` will send out those final completed notifications. Default is `false`
     * @type {boolean}
     * @memberof UpdateDocumentAndSendRequest
     */
    'embedded_signing_notifications'?: boolean;
    /**
     * Sets the custom requester name for the document. When set, this is the name used for all email communications, signing notifications, and in the audit file.
     * @type {string}
     * @memberof UpdateDocumentAndSendRequest
     */
    'custom_requester_name'?: string;
    /**
     * Sets the custom requester email for the document. When set, this is the email used for all email communications, signing notifications, and in the audit file.
     * @type {string}
     * @memberof UpdateDocumentAndSendRequest
     */
    'custom_requester_email'?: string;
    /**
     * A URL that recipients are redirected to after successfully signing a document.
     * @type {string}
     * @memberof UpdateDocumentAndSendRequest
     */
    'redirect_url'?: string;
    /**
     * Whether to allow recipients the option to decline signing a document. If multiple signers are involved in a document, any single recipient can cancel the entire document signing process by declining to sign.
     * @type {boolean}
     * @memberof UpdateDocumentAndSendRequest
     */
    'allow_decline'?: boolean;
    /**
     * In some cases a signer is not the right person to sign and may need to reassign their signing responsibilities to another person. This feature allows them to reassign the document to someone else.
     * @type {boolean}
     * @memberof UpdateDocumentAndSendRequest
     */
    'allow_reassign'?: boolean;
    /**
     * A URL that recipients are redirected to if the document is declined.
     * @type {string}
     * @memberof UpdateDocumentAndSendRequest
     */
    'decline_redirect_url'?: string;
    /**
     * Optional key-value data that can be associated with the document. If set, will be available every time the document data is returned.
     * @type {object}
     * @memberof UpdateDocumentAndSendRequest
     */
    'metadata'?: object;
}

